apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'de.mannodermaus.android-junit5'

android {
  compileSdkVersion versions.compileSdk

  defaultConfig {
    applicationId   'io.redgreen.oneway.catalogue'
    minSdkVersion    versions.minSdk
    targetSdkVersion versions.targetSdk
    versionCode      1
    versionName     '1.0'

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions { // For JUnit 5
    sourceCompatibility versions.java
    targetCompatibility versions.java
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { // For JUnit 5
  sourceCompatibility = versions.java
  targetCompatibility = versions.java

  kotlinOptions {
    jvmTarget = versions.java
  }
}

androidExtensions {
  experimental = true // For @Parcelize
}

dependencies {
  implementation project(':core-android')

  // Kotlin
  implementation srcDependencies.kotlin

  // Leak Canary
  debugImplementation srcDependencies.leakCanary
  releaseImplementation srcDependencies.leakCanaryNoOp

  // Rx
  implementation srcDependencies.rxBindingKotlin
  implementation srcDependencies.rxJava
  implementation srcDependencies.rxKotlin

  // Support libraries
  implementation srcDependencies.appCompat
  implementation srcDependencies.constraintLayout
  implementation srcDependencies.design

  // Test
  testImplementation project(':core-test')

  testImplementation testDependencies.jUnit5
  testImplementation testDependencies.jUnit5Params
  testRuntimeOnly testDependencies.jUnit5Runtime
  testImplementation testDependencies.mockitoKotlin
  testImplementation testDependencies.truth

  // Android Test
  androidTestImplementation testDependencies.androidTestRunner
  androidTestImplementation testDependencies.espresso
  androidTestImplementation testDependencies.truth
}
